TESTCASE WRITEUP
------------------

TESTCASE1:
----------

    Name: cov1.gft

    Details: This testcase helps increase the code coverage for the giftcardreader. The testcase can be generated by executing the genanim_cov1.py. The testcase utilizes the 0x07 switchcase in the animate function and prints the msg in this case it is "HAPPY INCREASE CODE COVERAGE!!!"

gcov output before cov1.gft
----------------------------
rahuja@ubuntu:~/Exclusive/NYU/appsec/assignment_1/assignment-1-QuickSilverAlpha$ gcov giftcardreader
File 'giftcardreader.c'
Lines executed:60.23% of 176
Creating 'giftcardreader.c.gcov'

gcov output after executing cov1.gft
-------------------------------------

rahuja@ubuntu:~/Exclusive/NYU/appsec/assignment_1/assignment-1-QuickSilverAlpha$ gcov giftcardreader
File 'giftcardreader.c'
Lines executed:65.91% of 176
Creating 'giftcardreader.c.gcov'

TESTCASE2:
----------

    Name: cov2.gft

    Details: This testcase helps increase the code coverage for the giftcardreader. The testcase can be generated by executing the genanim_cov2.py. The testcase utilizes the 0x08 switchcase in the animate function that basically just returns from the animate function after following "goto done;". The message in cov2.gft is "THIS JUST RETURNS!!!!!!!!!!!!!!"


gcov output after executing cov1.gft and cov2.gft
--------------------------------------------------

rahuja@ubuntu:~/Exclusive/NYU/appsec/assignment_1/assignment-1-QuickSilverAlpha$ gcov giftcardreader
File 'giftcardreader.c'
Lines executed:67.05% of 176
Creating 'giftcardreader.c.gcov'

The following bugs are two crashes detected by AFL++


BUG1:
------

Bug1:
------ 

    Cause: fuzzer1.gft
    
    Issue: On debugging, the developer found the issue to be in the "animate" function. The issue arose due to the improper handling of mptr pointer in 0x03 switchcase.

    Exploit: The giftcard is created in a way that it executes the 0x03 switchcase continously in a loop. The mptr should always point to msg (32 bytes). On continous updation, mptr points to a region that is inaccessible and hence the prgram segfaults.  

    Fix: A check is created in the 0x03 switchcase of the "animate" function to keep mptr to always point within the sizeof(msg) that 32 bytes and prevents the segfault.


Bug2:
------ 

    Cause: fuzzer2.gft
    
    Issue: On debugging, the developer found the issue to be in the "animate" function. The issue arose due to improper handling of the regs[16] bounds in the 0x04 switchcase.

    Exploit: The giftcard is created in a way that it has 69 records. The first record has the program without the null termination that makes its length to be greater than sizeof(regs) which 16 bytes. This therefore writes out of the bound. This undefined behavior causes a crash later in the code. The for loop in the "print_gift_card_info" has to go to the next record which is < gcd_ptr->number_of_gift_card_records (in this case 69). But, due to the undefined behavior at 0x04 switchcase in "animate" function the "gcd_ptr->number_of_gift_card_records" which was 69 before is inaccessible now, hence leading to a segmentation fault. 

    Fix: The fix is provided in the 0x04 switchcase where the upper and the lower bounds of the array are checked before writing on a specific index of the array.




PS: There is no change in the yml file as before it was executing the make test to execute the testcases and now its doing the same. The new testcases mentioned above are all part of the testcases/valid/ folder.